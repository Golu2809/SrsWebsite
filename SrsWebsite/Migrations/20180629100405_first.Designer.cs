// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SrsWebsite.Models;
using System;

namespace SrsWebsite.Migrations
{
    [DbContext(typeof(SrsContext))]
    [Migration("20180629100405_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SrsWebsite.Models.CaliberType", b =>
                {
                    b.Property<int>("CaliberTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CaliberName")
                        .IsRequired();

                    b.Property<int?>("UserId");

                    b.HasKey("CaliberTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("CaliberTypes");
                });

            modelBuilder.Entity("SrsWebsite.Models.PaymentType", b =>
                {
                    b.Property<int>("PaymentTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("PaymentTypeId");

                    b.ToTable("PaymentTypes");
                });

            modelBuilder.Entity("SrsWebsite.Models.Shooting", b =>
                {
                    b.Property<int>("ShootingId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CaliberTypeId");

                    b.Property<DateTime>("CreationDateTime");

                    b.Property<bool>("IsFinished");

                    b.Property<int>("NumberOfShoots");

                    b.Property<int>("PaymentTypeId");

                    b.Property<int>("ShootingTypeId");

                    b.Property<int>("UserId");

                    b.HasKey("ShootingId");

                    b.HasIndex("CaliberTypeId");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("ShootingTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Shootings");
                });

            modelBuilder.Entity("SrsWebsite.Models.ShootingType", b =>
                {
                    b.Property<int>("ShootingTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("Price");

                    b.HasKey("ShootingTypeId");

                    b.ToTable("ShootingTypes");
                });

            modelBuilder.Entity("SrsWebsite.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SrsWebsite.Models.CaliberType", b =>
                {
                    b.HasOne("SrsWebsite.Models.User")
                        .WithMany("Calibers")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SrsWebsite.Models.Shooting", b =>
                {
                    b.HasOne("SrsWebsite.Models.CaliberType", "CaliberType")
                        .WithMany()
                        .HasForeignKey("CaliberTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SrsWebsite.Models.PaymentType", "PaymentType")
                        .WithMany()
                        .HasForeignKey("PaymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SrsWebsite.Models.ShootingType", "ShootingType")
                        .WithMany()
                        .HasForeignKey("ShootingTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SrsWebsite.Models.User", "User")
                        .WithMany("Shootings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
